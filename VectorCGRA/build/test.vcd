$version Generated by VerilatedVcd $end
$date Sat Aug 12 06:13:00 2023
 $end
$timescale  10ps $end

 $scope module TOP $end
  $var wire  1 # carry_in [0:0] $end
  $var wire  1 $ carry_out [0:0] $end
  $var wire  1 % clk [0:0] $end
  $var wire  1 ) recv_const__en [0:0] $end
  $var wire  9 * recv_const__msg [8:0] $end
  $var wire  1 + recv_const__rdy [0:0] $end
  $var wire  1 , recv_in__en(0) [0:0] $end
  $var wire  1 - recv_in__en(1) [0:0] $end
  $var wire  9 . recv_in__msg(0) [8:0] $end
  $var wire  9 / recv_in__msg(1) [8:0] $end
  $var wire  1 0 recv_in__rdy(0) [0:0] $end
  $var wire  1 1 recv_in__rdy(1) [0:0] $end
  $var wire  2 & recv_in_count(0) [1:0] $end
  $var wire  2 ' recv_in_count(1) [1:0] $end
  $var wire  1 2 recv_opt__en [0:0] $end
  $var wire 31 3 recv_opt__msg [30:0] $end
  $var wire  1 4 recv_opt__rdy [0:0] $end
  $var wire  1 ( reset [0:0] $end
  $var wire  1 5 send_out__en(0) [0:0] $end
  $var wire  9 6 send_out__msg(0) [8:0] $end
  $var wire  1 7 send_out__rdy(0) [0:0] $end
  $scope module VectorAdderRTL__65a6399a04a67573 $end
   $var wire  1 # carry_in [0:0] $end
   $var wire  9 8 carry_in_temp [8:0] $end
   $var wire  1 $ carry_out [0:0] $end
   $var wire  1 % clk [0:0] $end
   $var wire  9 : const_one [8:0] $end
   $var wire  1 ) recv_const__en [0:0] $end
   $var wire  9 * recv_const__msg [8:0] $end
   $var wire  1 + recv_const__rdy [0:0] $end
   $var wire  1 , recv_in__en(0) [0:0] $end
   $var wire  1 - recv_in__en(1) [0:0] $end
   $var wire  9 . recv_in__msg(0) [8:0] $end
   $var wire  9 / recv_in__msg(1) [8:0] $end
   $var wire  1 0 recv_in__rdy(0) [0:0] $end
   $var wire  1 1 recv_in__rdy(1) [0:0] $end
   $var wire  2 & recv_in_count(0) [1:0] $end
   $var wire  2 ' recv_in_count(1) [1:0] $end
   $var wire  1 2 recv_opt__en [0:0] $end
   $var wire 31 3 recv_opt__msg [30:0] $end
   $var wire  1 4 recv_opt__rdy [0:0] $end
   $var wire  1 ( reset [0:0] $end
   $var wire  1 5 send_out__en(0) [0:0] $end
   $var wire  9 6 send_out__msg(0) [8:0] $end
   $var wire  1 7 send_out__rdy(0) [0:0] $end
   $scope module comb_logic $end
    $scope module unnamedblk1 $end
     $var wire 32 ; i [31:0] $end
    $upscope $end
    $scope module unnamedblk2 $end
     $var wire 32 < j [31:0] $end
    $upscope $end
    $scope module unnamedblk3 $end
     $var wire 32 9 j [31:0] $end
    $upscope $end
   $upscope $end
   $scope module update_signal $end
    $scope module unnamedblk4 $end
     $var wire 32 < j [31:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
b00 &
b00 '
0(
0)
b000000000 *
0+
0,
0-
b000000000 .
b000000000 /
00
01
02
b0000000000000000000000000000000 3
04
05
b000000000 6
07
b000000000 8
b00000000000000000000000000000001 9
b000000001 :
b00000000000000000000000000000010 ;
b00000000000000000000000000000001 <
#50
1%
#100
0%
b01 &
b01 '
1(
b000001111 *
#150
1%
#200
0%
#250
1%
#300
0%
0(
1)
1+
1,
1-
b000001101 .
b000001100 /
10
11
12
b0110011100100000000000000000000 3
14
15
b000011100 6
17
#350
1%
#400
0%
#450
1%
#500
0%
#550
1%
#600
0%
#650
1%
#700
0%
#750
1%
#800
0%
#850
1%
#900
0%
#950
1%
